{"version":3,"sources":["components/Form.js","components/Display.js","components/CurrentWeather.js","components/WeatherList.js","App.js","registerServiceWorker.js","index.js"],"names":["API_KEY","Form","state","text","error","handleChange","event","_this","setState","Object","defineProperty","target","name","value","onDismiss","handleSubmit","cityName","preventDefault","axios","get","concat","then","res","props","getWeather","city","data","country","sys","day","moment","format","date","img","weather","icon","temp","Math","round","main","description","temp_max","temp_min","humidity","wind","speed","catch","handleLocation","lat","long","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","react_default","a","createElement","Fragment","Alert","color","isOpen","this","toggle","className","onClick","onSubmit","InputGroup","Input","onChange","placeholder","InputGroupAddon","addonType","Button","Component","Display","CurrentWeather","_props$weather","Container","Row","Col","src","alt","WeatherList","changeWeather","weatherItem","dt_txt","dist_default","App","currentWeather","weatherList","newWeather","objectSpread","list","console","log","filter","eachWeather","split","_this2","length","Form_Form","Display_Display","fluid","map","key","dt","bind","React","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.1ff9abf4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { InputGroup, InputGroupAddon, Button, Input, Alert } from \"reactstrap\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport \"../css/Weather.css\";\n\nconst API_KEY = \"74a0d65d1017ee174d9493121f8fca0b\";\n\nexport default class Form extends Component {\n  state = {\n    text: \"\",\n    error: false\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  onDismiss = () => {\n    this.setState({\n      error: !this.state.error\n    });\n  };\n\n  handleSubmit = event => {\n    const country = \"US\";\n    const cityName = this.state.text;\n    event.preventDefault();\n    axios\n      .get(\n        `http://api.openweathermap.org/data/2.5/weather?q=${cityName},${country}&appid=${API_KEY}&units=imperial`\n      )\n      .then(res => {\n        this.props.getWeather(\n          {\n            city: res.data.name,\n            country: res.data.sys.country,\n            day: moment().format(\"dddd\"),\n            date: moment().format(\"MMMM Do YYYY\"),\n            img: `http://openweathermap.org/img/w/${\n              res.data.weather[0].icon\n            }.png`,\n            temp: Math.round(res.data.main.temp),\n            description: res.data.weather[0].description,\n            temp_max: Math.round(res.data.main.temp_max),\n            temp_min: Math.round(res.data.main.temp_min),\n            humidity: res.data.main.humidity,\n            wind: Math.round(res.data.wind.speed)\n          },\n          cityName\n        );\n        this.setState({\n          text: \"\"\n        });\n      })\n      .catch(() => {\n        this.setState({\n          error: !this.state.error\n        });\n      });\n  };\n\n  handleLocation = () => {\n    let lat = 0;\n    let long = 0;\n    navigator.geolocation.getCurrentPosition(position => {\n      lat = position.coords.latitude;\n      long = position.coords.longitude;\n      axios\n        .get(\n          `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${API_KEY}&units=imperial`\n        )\n        .then(res => {\n          const cityName = res.data.name;\n          this.props.getWeather(\n            {\n              city: res.data.name,\n              country: res.data.sys.country,\n              day: moment().format(\"dddd\"),\n              date: moment().format(\"MMMM Do YYYY\"),\n              img: `http://openweathermap.org/img/w/${\n                res.data.weather[0].icon\n              }.png`,\n              temp: Math.round(res.data.main.temp),\n              description: res.data.weather[0].description,\n              temp_max: Math.round(res.data.main.temp_max),\n              temp_min: Math.round(res.data.main.temp_min),\n              humidity: res.data.main.humidity,\n              wind: Math.round(res.data.wind.speed)\n            },\n            cityName\n          );\n        })\n        .then(() => {\n          this.setState({\n            error: !this.state.error\n          });\n        });\n    });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Alert\n          color=\"warning\"\n          isOpen={this.state.error}\n          toggle={this.onDismiss}\n        >\n          <span className=\"location\" onClick={this.handleLocation}>\n            use current location\n            <i className=\"fas fa-search-location p-1\" />\n          </span>\n        </Alert>\n        <form className=\"search-bar pt-5\" onSubmit={this.handleSubmit}>\n          <InputGroup className=\"search-group\">\n            <Input\n              className=\"search-field\"\n              name=\"text\"\n              value={this.state.text}\n              onChange={this.handleChange}\n              placeholder=\"Enter City...\"\n            />\n            <InputGroupAddon addonType=\"append\">\n              <Button color=\"dark\" onSubmit={this.handleSubmit}>\n                <i className=\"fas fa-search\" />\n              </Button>\n            </InputGroupAddon>\n          </InputGroup>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport \"../css/Display.css\";\n\nexport default function Display() {\n  return (\n    <div className=\"display-container\">\n      <div className=\"wrapper\">\n        <div className=\"sun\" />\n        <div className=\"cloud\">\n          <div className=\"cloud1\">\n            <ul>\n              <li />\n              <li />\n              <li />\n              <li />\n            </ul>\n          </div>\n          <div className=\"cloud1 c_shadow\">\n            <ul>\n              <li />\n              <li />\n              <li />\n              <li />\n            </ul>\n          </div>\n        </div>\n\n        <div className=\"cloud_s\">\n          <div className=\"cloud1\">\n            <ul>\n              <li />\n              <li />\n              <li />\n              <li />\n            </ul>\n          </div>\n          <div className=\"cloud1 c_shadow\">\n            <ul>\n              <li />\n              <li />\n              <li />\n              <li />\n            </ul>\n          </div>\n        </div>\n\n        <div className=\"cloud_vs\">\n          <div className=\"cloud1\">\n            <ul>\n              <li />\n              <li />\n              <li />\n              <li />\n            </ul>\n          </div>\n          <div className=\"cloud1 c_shadow\">\n            <ul>\n              <li />\n              <li />\n              <li />\n              <li />\n            </ul>\n          </div>\n        </div>\n        <div className=\"haze\" />\n        <div className=\"haze_stripe\" />\n        <div className=\"haze_stripe\" />\n        <div className=\"haze_stripe\" />\n        <div className=\"thunder\" />\n        <div className=\"rain\">\n          <ul>\n            <li />\n            <li />\n            <li />\n          </ul>\n        </div>\n        <div className=\"sleet\">\n          <ul>\n            <li />\n            <li />\n            <li />\n          </ul>\n        </div>\n        <div className=\"text\">\n          <ul>\n            <li>Mostly Sunny</li>\n            <li>Partly Sunny</li>\n            <li>Partly Cloudy</li>\n            <li>Mostly Cloudy</li>\n            <li>Cloudy</li>\n            <li>Hazy</li>\n            <li>Thunderstorm</li>\n            <li>Rain</li>\n            <li>Sleet</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport \"../css/Weather.css\";\n\nexport default function CurrentWeather(props) {\n  const {\n    city,\n    country,\n    day,\n    date,\n    description,\n    img,\n    temp,\n    temp_max,\n    temp_min,\n    humidity,\n    wind\n  } = props.weather;\n  return (\n    <Container className=\"main\">\n      <div className=\"header_key\">\n        <span className=\"h2\">\n          {city}, {country}\n        </span>\n        <p className=\"text-secondary\">\n          {day}, {date}\n          <br />\n          {description}\n        </p>\n      </div>\n      <Row>\n        <Col>\n          <img className=\"icon\" src={img} alt=\"\" />\n          <span className=\"temp_key\">{temp}°</span>\n        </Col>\n        <Col>\n          <p className=\"text-secondary\">\n            <span className=\"text-white h6\">Temperature: </span>\n            {temp_max}° ~ {temp_min}°\n            <br />\n            <span className=\"text-white h6\">Humidity: </span>\n            {humidity}%\n            <br />\n            <span className=\"text-white h6\">Wind: </span>\n            {wind} mph\n          </p>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport Moment from \"react-moment\";\nimport PropTypes from \"prop-types\";\nimport \"../css/Weather.css\";\n\nexport default function WeatherList(props) {\n  const { changeWeather, weatherItem } = props;\n  const { dt_txt, weather, main } = weatherItem;\n  return (\n    <div className=\"weather\" onClick={changeWeather}>\n      <div className=\"weather_list\">\n        <Moment format=\"dddd\">{dt_txt}</Moment>\n        <br />\n        <img\n          className=\"icon_list\"\n          src={`http://openweathermap.org/img/w/${weather[0].icon}.png`}\n          alt=\"\"\n        />\n        <br />\n        {Math.round(main.temp)}\n        <span>°F</span>\n      </div>\n    </div>\n  );\n}\n\nWeatherList.propTypes = {\n  changeWeather: PropTypes.func.isRequired,\n  weatherItem: PropTypes.object.isRequired\n};\n","import React from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { Container, Row } from \"reactstrap\";\n\nimport Form from \"./components/Form\";\nimport Display from \"./components/Display\";\nimport CurrentWeather from \"./components/CurrentWeather\";\nimport WeatherList from \"./components/WeatherList\";\n\nclass App extends React.Component {\n  state = {\n    currentWeather: {},\n    weatherList: []\n  };\n\n  changeWeather = newWeather => {\n    this.setState({\n      currentWeather: {\n        ...this.state.currentWeather,\n        day: moment(newWeather.dt_txt).format(\"dddd\"),\n        date: moment(newWeather.dt_txt).format(\"MMMM Do YYYY\"),\n        img: `http://openweathermap.org/img/w/${\n          newWeather.weather[0].icon\n        }.png`,\n        temp: Math.round(newWeather.main.temp),\n        description: newWeather.weather[0].description,\n        temp_max: Math.round(newWeather.main.temp_max),\n        temp_min: Math.round(newWeather.main.temp_min),\n        humidity: newWeather.main.humidity,\n        wind: Math.round(newWeather.wind.speed)\n      }\n    });\n  };\n\n  getWeather = (weather, city) => {\n    const API_KEY = \"74a0d65d1017ee174d9493121f8fca0b\";\n    const country = \"US\";\n\n    this.setState({\n      currentWeather: weather\n    });\n    axios\n      .get(\n        `http://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=${API_KEY}&units=imperial`\n      )\n      .then(res => {\n        let data = res.data.list;\n        console.log(data);\n        this.setState({\n          weatherList: data.filter(eachWeather => {\n            let weather = eachWeather.dt_txt.split(\" \");\n            return weather[1] === \"21:00:00\";\n          })\n        });\n      });\n  };\n\n  render() {\n    if (this.state.weatherList.length === 0) {\n      return (\n        <div className=\"App\">\n          <Form getWeather={this.getWeather} />\n          <Display />\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <Form getWeather={this.getWeather} />\n          <div className=\"display\">\n            <Container fluid>\n              <Row>\n                <CurrentWeather weather={this.state.currentWeather} />\n              </Row>\n              <br />\n              <Row>\n                {this.state.weatherList.map(weatherItem => (\n                  <WeatherList\n                    key={weatherItem.dt}\n                    weatherItem={weatherItem}\n                    changeWeather={this.changeWeather.bind(this, weatherItem)}\n                  />\n                ))}\n              </Row>\n            </Container>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./css/App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}